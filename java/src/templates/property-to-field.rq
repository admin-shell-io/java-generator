prefix idstt: <https://w3id.org/idsa/transformationtemplates/>
prefix idsm: <https://w3id.org/idsa/metamodel/>

template idstt:property-to-field(?property, ?class) {
	
	"\n\t"
	#Add javadoc
	"/**"
    st:call-template(idstt:anything-to-comment, ?property)
    "\n\t*/"
    "\n\t"

	#Check if this property is NotNull or NotEmpty. If so, add appropriate annotations
    st:call-template(idstt:propertyAnnotation, ?class, ?property)

    "@JsonAlias({\"ids:" st:call-template(idstt:to_property_name, ?property) "\", \"" st:call-template(idstt:to_property_name, ?property) "\"})"
    "\n\t"

    " "

	#Turn the RDF type of the range into a java type for this field
    st:call-template(idstt:range-to-java-type, ?class, ?property, ?range, "<? extends ", ">")

	#Fields are prefixed with an underscore
    " _"
	#The actual resulting field name in Java
    st:call-template(idstt:to_property_name, ?property)
    ";"
}
where  {
   ?property rdfs:range ?range.
}

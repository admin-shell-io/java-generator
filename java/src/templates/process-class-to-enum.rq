prefix ids: <https://w3id.org/idsa/core/>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template ids:process-class-to-enum(?class) {

    "package de.fraunhofer.iais.eis;\n"

    st:call-template(ids:basic-imports)

    "\n\n"

    "/** " str(?comment) " */\n"
    "public enum " st:call-template(idstt:to_class_name, ?class)

     if (bound(?superClass) && strstarts(str(?superClass), str(<ids:>)),
            concat(" implements ", strafter(st:call-template(ids:subclasses-to-list, ?class), ", ")),
            "")

    " {\n"

    st:call-template(ids:process-enum-individuals, ?class)

    ";"
    "\n"
    "\n\t@JsonValue"
    "\n\tprivate URL id;"

    "\n\t// instance fields as derived from information model\n"
    st:call-template(ids:subclass-properties-to-fields, ?class)

    "\n"
	"\n\t" st:call-template(idstt:to_class_name, ?class) "(String id) {"
	"\n\t\ttry {"
	"\n\t\t\tthis.id = new URL(id);"
    "\n\t\t}"
    "\n\t\tcatch (java.net.MalformedURLException e) {"
    "\n\t\t\tthrow new IllegalArgumentException(e);"
    "\n\t\t}"
	"\n\t}"

    "\n"
    "\n\tfinal public URL getId() {"
    "\n\t\treturn id;"
    "\n\t}"
    "\n\tpublic String toRdf() {"
    "\n\t\treturn VocabUtil.getInstance().toRdf(this);"
    "\n\t}"
    "\n"

    "\n"
	"\n\t@Override"
	"\n\tpublic String toString() {"
		"\n\t\treturn id.toString();"
	"\n\t}"

    # superclass methods
    "\n"
    st:call-template(ids:subclass-properties-to-methods, ?class, 'enum')

    "\n}\n"

}
WHERE
{
    ?class a owl:Class;
        rdfs:comment ?comment.

    optional {
        ?class rdfs:subClassOf ?superClass.
    }
}
GROUP BY ?class


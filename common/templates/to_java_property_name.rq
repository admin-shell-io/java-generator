prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:to_java_property_name(?property) {
    #We need to avoid name collisions on properties. Taking the trivial way of only using the property name
    #can cause issues, e.g. in the case of
    #http://myExample/property
    #http://myExample/subClass/property
    #In this case, we MUST NOT parse both to "property". Instead, parse the second one to "subClassProperty" instead

    #Does the property URI include some class name?
    if(?propertyUriIncludesClassName,

    #Yes it does, choose a more complex property name to avoid collisions
    CONCAT(CONCAT(CONCAT(LCASE( SUBSTR( STR(?shortDomain), 1, 1)), #CONCATs are needed, as we are inside an IF statement
    SUBSTR( STR(?shortDomain), 2)),
    UCASE( SUBSTR( STR(?shortId), 1, 1))),
    SUBSTR( STR(?shortId), 2)),

    #No it does not, use simple name
    CONCAT(LCASE( SUBSTR( STR(?shortId), 1, 1)), SUBSTR( STR(?shortId), 2)))
}
where {
    ?property rdfs:domain ?domain .
    BIND( st:call-template(idstt:to_short_identifier, ?property) as ?shortId )
    BIND( st:call-template(idstt:to_short_identifier, ?domain) as ?shortDomain )


    BIND( st:get-namespace() as ?ns )
    BIND( st:get-namespace-prefix() as ?prefix )
    BIND( CONCAT(str(?ns), str(st:call-template(idstt:to_short_identifier, ?property))) as ?nsProperty )
    #Is namespace plus short property name the original URI? If so, the class name is NOT included in the property URI
    BIND( IF(?nsProperty = STR(?property), false, true) AS ?propertyUriIncludesClassName)
}

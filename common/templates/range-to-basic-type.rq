prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix idsm: <https://w3id.org/idsa/metamodel/>
prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:range-to-basic-type(?property, ?range) {

    if (bound(?refByUri) && (?refByUri = true),
        "URI",

        # basic types
        if (str(?range) = str(<xsd:dateTime>), "XMLGregorianCalendar",
        if (str(?range) = str(<xsd:dateTimeStamp>), "XMLGregorianCalendar",
        if (str(?range) = str(<xsd:string>), if(EXISTS { VALUES ?property { <https://w3id.org/idsa/core/description> <https://w3id.org/idsa/core/title> <https://w3id.org/idsa/core/keyword> <https://w3id.org/idsa/core/revocationReason> <https://w3id.org/idsa/core/contractRejectionReason> <https://w3id.org/idsa/core/activityDescription> } } , "de.fraunhofer.iais.eis.util.LocalizableString", "String"),
        if (str(?range) = str(<xsd:integer>), "BigInteger",
        if (str(?range) = str(<xsd:int>), "int",
        if (str(?range) = str(<xsd:nonNegativeInteger>), "int",
        if (str(?range) = str(<xsd:long>), "long",
        if (str(?range) = str(<xsd:short>), "short",
        if (str(?range) = str(<xsd:float>), "float",
        if (str(?range) = str(<xsd:double>), "double",
        if (str(?range) = str(<xsd:boolean>), "boolean",
        if (str(?range) = str(<xsd:byte>), "byte",
        if (str(?range) = str(<xsd:decimal>), "java.math.BigDecimal",
        if (str(?range) = str(<xsd:base64Binary>), "byte[]",
        if (str(?range) = str(<xsd:time>), "XMLGregorianCalendar",
        if (str(?range) = str(<xsd:date>), "XMLGregorianCalendar",
        if (str(?range) = str(<xsd:anyURI>), "URI",
        if (str(?range) = str(<xsd:duration>), "javax.xml.datatype.Duration",

        # rdf types
        if (str(?range) = str(<rdfs:Resource>), "de.fraunhofer.iais.eis.util.RdfResource",
        if (str(?range) = str(<rdf:langString>), "de.fraunhofer.iais.eis.util.LocalizableString",
        if (str(?range) = str(<rdfs:Literal>), "de.fraunhofer.iais.eis.util.LocalizableString", #TODO
        if (str(?range) = str(<rdf:PlainLiteral>), "de.fraunhofer.iais.eis.util.PlainLiteral",

        # custom types
        st:call-template(idstt:to_class_name, ?range)))))))))))))))))))))))
    )

}
where {
    ?property rdfs:range ?range.
    OPTIONAL {?property idsm:referenceByUri ?refByUri}
}

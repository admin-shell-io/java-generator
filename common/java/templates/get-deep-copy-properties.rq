prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:get-deep-copy-properties (?class) {

		if(STRSTARTS(STR(?javaType), "List<"),
			# Array: need to go elemetwise
            st:call-template(idstt:get-deep-copy-array, ?class, ?property, ?javaType, ?range, ?field),
			# Object: directly copy the element
            CONCAT("\t\t",
            st:call-template(idstt:get-deep-copy-object, ?class, ?property, ?javaType, ?range, ?field, false))
		)
        

    
}
WHERE  {
    ?class rdfs:subClassOf* ?superClass .
    OPTIONAL {
        {
            ?property rdfs:domain ?superClass .
            ?property rdfs:range ?range .
            BIND(st:call-template(idstt:to_java_field_name, ?property, ?superClass) as ?field )
        }
        UNION
        {   
            ?property rdfs:domain/owl:unionOf/rdf:rest*/rdf:first ?superClass .
            ?property rdfs:range ?range .
            BIND(st:call-template(idstt:to_java_field_name, ?property, ?superClass) as ?field )
        }
    }
    BIND(st:call-template(idstt:range-to-java-type, ?class, ?property, ?range, "<", ">") as ?javaType)
	# make range optional, use bind range or rdf:resource
}
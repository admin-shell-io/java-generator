#
# Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:property-to-field(?property, ?class) {
	"\n\t"
	# Add property descriptions
	#"/**"
    #st:call-template(idstt:anything-to-comment, ?property, true)
    #"\n\t*/"
    "\n\t"

	# Check if this property is NotNull or NotEmpty. If so, add appropriate annotations
    IF(STRLEN(st:call-template(idstt:property-annotation, ?class, ?property)) > 1,
        # then
        CONCAT(
            st:call-template(idstt:property-annotation, ?class, ?property),
            "\n\t"
        ),
        # else
        ""
    )

    if(?useJackson,
        #then
        CONCAT(
               "@JsonAlias({\"",
               st:call-template(idstt:to_full_identifier, ?property),
               "\", \"",
               st:call-template(idstt:to_java_property_name, ?property),
               "\"})"
        ),
        #else
        CONCAT(
                "@IRI(\"",
                st:call-template(idstt:to_full_identifier, ?property),
                "\")"
        )
    )
    "\n\t"

    "protected "

	# Turn the RDF type of the range into a java type for this field
	if(COUNT(?property) > 1 || isBlank(?range), "RdfResource", 
		st:call-template(idstt:range-to-java-type, ?class, ?property, ?range, "<", ">")
	)
	# Fields are prefixed with an underscore
	# The actual resulting field name in Java
    " "
    st:call-template(idstt:to_java_field_name, ?property, ?class)
    if( (STRSTARTS(?dataType, "List<")) || (STRSTARTS(?dataType, "Collection<")), " = new ArrayList<>()", "")
    ";\n"
}
where  {
    OPTIONAL{
        ?property rdfs:range ?pRange.
    }
    BIND(if(BOUND(?pRange), ?pRange, "RdfResource") AS ?range)
    BIND(st:add-jackson-annotations() AS ?useJackson)
    BIND(st:call-template(idstt:range-to-java-type, ?class, ?property, ?range, "<", ">") AS ?dataType)
} GROUP BY ?property

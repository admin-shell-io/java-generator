#
# Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:get-class-to-hash-code(?class, ?forInterface) {

    if (?forInterface,
        # javadoc for interface only
        concat(concat(concat(concat(concat(concat(
        "\n\t/**",
        "\n\t* This function returns a hash code value for the "), st:call-template(idstt:to_class_name, ?class)),
            " for the benefit of e.g. hash tables."),
        "\n\t* @return a hash code value for the "), st:call-template(idstt:to_class_name, ?class)),
        "\n\t*/"),
        # no javadoc for bean, but @Override
        "\n\t@Override"
    )

    "\n\tpublic int hashCode()"

    if (?forInterface,
        # no body for interface
        ";",
        # with body for bean
        concat(concat(
            " {\n\t\treturn Objects.hash(",
            if(bound(?hasProperties) && strlen(?hasProperties) > 1,
                # then
                st:call-template(idstt:get-class-hash-code-property-list, ?class),
                # else
                "super.hashCode()"
            )), ");\n\t}")
    )
    "\n"
}
WHERE  {
    BIND(st:call-template(idstt:list-class-properties, ?class) AS ?hasProperties)
}

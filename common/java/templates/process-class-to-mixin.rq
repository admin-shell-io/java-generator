#
# Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

prefix idstt: <https://w3id.org/idsa/transformationtemplates/>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>

template idstt:process-class-to-mixin(?class) {

	st:call-template(idstt:get-license)
    st:call-template(idstt:get-package, 'mixin')

    st:call-template(idstt:basic-imports)
	"\nimport com.fasterxml.jackson.annotation.JsonTypeName;"
	"\nimport com.fasterxml.jackson.annotation.JsonTypeInfo;"
	"\nimport com.fasterxml.jackson.annotation.JsonSubTypes;"
	"\nimport com.fasterxml.jackson.annotation.JsonProperty;"
	"\n"

	#The @JsonTypeName property. Value is just the interface name
	concat(
		"\n@JsonTypeName(\"",
		st:call-template(idstt:to_interface_name, ?class),
		"\")"
	)

	#The @JsonTypeInfo property with a fixed value
	"\n@JsonTypeInfo(use=JsonTypeInfo.Id.NAME, property=\"modelType\")"

	if (STRLEN(STR(?subclassJsonAnnotations)) > 1,
		CONCAT(
			"\n@JsonSubTypes({",
			?subclassJsonAnnotations,
			"\n})"
		),
		""
	)
    "\npublic interface " st:call-template(idstt:to_mixin_name, ?class)
    " {\n"

	st:call-template(idstt:properties-to-mixin-methods, ?class, ?superClass)


    "\n}\n"

}
where{
    ?class a owl:Class ;
		rdfs:subClassOf* ?superClass.

    #BIND (st:call-template(idstt:subclass-properties-to-methods, ?class, 'mixin') as ?subclassPropertyMethods )
	BIND (st:call-template(idstt:subclass-to-json-annotation, ?class, 'mixin') as ?subclassJsonAnnotations )

	OPTIONAL {
		{?property rdfs:domain ?class.}
		UNION
		{?property rdfs:domain/owl:unionOf/rdf:rest*/rdf:first ?class.}
	}

}
GROUP BY ?class

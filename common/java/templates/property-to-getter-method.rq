#
# Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:property-to-getter-method(?property, ?class, ?isInterface) {

    IF(STRLEN(st:call-template(idstt:range-jackson-annotation, ?property, ?range)) > 1,
        # then
        CONCAT(
            "\n\t",
            st:call-template(idstt:range-jackson-annotation, ?property, ?range)
        ),
        # else
        ""
    )

    IF(STRLEN(st:call-template(idstt:property-annotation, ?class, ?property)) > 1,
        # then
        CONCAT(
            "\n\t",
            st:call-template(idstt:property-annotation, ?class, ?property)
        ),
        # else
        ""
    )

    "\n\t"
    concat("@JsonProperty(\"", st:call-template(idstt:to_full_identifier, ?property), "\")\n\t")

    # visibility modifier (public for interfaces, final public for enum/impl)
    if (?isInterface,
        "public ",
        "final public "
    )

    st:call-template(idstt:range-to-java-type, ?class, ?property, ?range, "<", ">")

    " "

    # method name
    "get"

    concat(
        ucase(substr(str(st:call-template(idstt:property-to-getter-setter-signature, ?property, ?class)), 1, 1)),
        substr(str(st:call-template(idstt:property-to-getter-setter-signature, ?property, ?class)), 2),
        '()')

}
where  {
    ?property rdfs:range ?range.
}

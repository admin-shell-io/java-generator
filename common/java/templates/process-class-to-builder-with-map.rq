prefix idstt: <https://w3id.org/idsa/transformationtemplates/>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>

template idstt:process-class-to-builder-with-map(?class) {

    "package de.fraunhofer.iais.eis;\n"

    st:call-template(idstt:basic-imports)

    "\n"
    "\n"
    "public class " st:call-template(idstt:to_builder_name, ?class)

    " {\n"

    "\n\tprivate Map<String, Object> map;"
	
	if (?hasId,
      # then
          "\n\tprivate URI id = null;",
      # else
          ""
      )

    # constructor

    "\n"
    "\n\tpublic " st:call-template(idstt:to_builder_name, ?class) "() {"
    "\n\t\tthis.map = new HashMap<>();"
    "\n\t}"
    "\n"

	if (?hasId,
      # then
          CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(
		  "\n\tpublic ", 
		  st:call-template(idstt:to_builder_name, ?class)),
		  "(URI id) {"),
		  "\n\t\tthis();"),
		  "\n\t\tthis.id = id;"),
		  "\n\t}\n"),
      # else
          ""
    )

    "\n\tpublic " st:call-template(idstt:to_builder_name, ?class) "(Map<String, Object> map) {"
    "\n\t\tthis();"
    "\n\t\tfor (Map.Entry<String, Object> entry : map.entrySet()){"
    "\n\t\t\tthis.map.put(entry.getKey(), Util.clone(entry.getValue()));"
    "\n\t\t}"
    "\n\t}"
    "\n"

	
	if (?hasId,
      # then
	  CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(
			"\n\tpublic ",
			st:call-template(idstt:to_builder_name, ?class)),
			"(URI id, Map<String, Object> map) {"),
		    "\n\t\tthis(map);"),
			"\n\t\tthis.id = id;"),
			"\n\t}"),
      # else
          ""
    )


    # method implementation

    st:call-template(idstt:subclass-properties-to-methods, ?class, 'builder')

    # build method

    "\n\n\t/**"
    "\n\t* This function takes the values that were set previously via the other functions of this class and turns them into a Java bean."
    "\n\t* @return Bean with specified values"
    "\n\t* @throws ConstraintViolationException This exception is thrown, if a validator is used and a violation is found."
    "\n\t*/"
    "\n\tfinal public " st:call-template(idstt:to_interface_name, ?class) " build() throws ConstraintViolationException {"
    "\n\t\t" st:call-template(idstt:to_bean_name, ?class) " " lcase(substr(st:call-template(idstt:to_bean_name, ?class), 1, 1)) substr(st:call-template(idstt:to_bean_name, ?class), 2)
        " = Util.fillInstanceFromMap(new " st:call-template(idstt:to_bean_name, ?class) "(), this.map);"
	if (?hasId,
      # then
	  CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(
		"\n\t\t if (this.id != null) {",
		"\n\t\t\t "),
		lcase(substr(st:call-template(idstt:to_bean_name, ?class), 1, 1))),
		substr(st:call-template(idstt:to_bean_name, ?class), 2)),
		".id = this.id;\n\t\t}"),
		"\n\t\tVocabUtil.getInstance().validate("),
		lcase(substr(st:call-template(idstt:to_bean_name, ?class), 1, 1))),
		substr(st:call-template(idstt:to_bean_name, ?class), 2)),
		");"),
		
      # else
          ""
    )
	"\n\t\treturn " lcase(substr(st:call-template(idstt:to_bean_name, ?class), 1, 1)) substr(st:call-template(idstt:to_bean_name, ?class), 2) ";"
    "\n\t}"

    "\n}\n"

}
WHERE {
	BIND( st:has-id-label-comment() as ?hasId )
}

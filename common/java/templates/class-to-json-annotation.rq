#
# Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

prefix idstt: <https://w3id.org/idsa/transformationtemplates/>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix sh: <http://www.w3.org/ns/shacl#>

template idstt:class-to-json-annotation(?class) {

    group {
        if (bound(?message) && (
            contains(str(?message), concat(st:call-template(idstt:to_class_name, ?class), " is a abstract class")) ||
            contains(str(?message), concat(st:call-template(idstt:to_class_name, ?class), " is an abstract class"))
        ),
        # then
            "",
        # else
            concat(
                if(?useJackson, "\n\t@JsonSubTypes.Type(value = ", "\n\t@KnownSubtypes.Type(value = "),
                st:call-template(idstt:to_bean_name, ?class),
                ".class)"
            )
        ) ; separator = ","
    }
}
WHERE {
    ?class a owl:Class.

    BIND(st:add-jackson-annotations() AS ?useJackson)

    optional {
        ?shape sh:targetClass ?class ;
            sh:sparql [ sh:message ?message ] .
    }
}

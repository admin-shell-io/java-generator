#
# Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

prefix idstt: <https://w3id.org/idsa/transformationtemplates/>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>

template idstt:aas-class-imports {

    if (bound(?instance),
        # then
        concat("\nimport io.adminshell.aas.v3.model.",  st:call-template(idstt:to_enum_name, ?class), ";"),
        # else
        concat(
            "\nimport io.adminshell.aas.v3.model.",  st:call-template(idstt:to_interface_name, ?class), ";",
            if (?isAbstract,
            # then
                "",
            # else
                concat(
                    "\nimport io.adminshell.aas.v3.model.impl.", st:call-template(idstt:to_bean_name, ?class), ";",
                    "\nimport io.adminshell.aas.v3.model.builder.", st:call-template(idstt:to_builder_name, ?class), ";"
                )       
            )
        )
    )
    
}
where {
    ?class a owl:Class.
    BIND( st:has-extendable-builder() as ?hasExtendable )
    BIND( st:call-template(idstt:class-is-abstract, ?class) AS ?isAbstract )

    OPTIONAL {
        ?instance a ?class
    }
    OPTIONAL {
        ?subClass rdfs:subClassOf* ?class .
        ?instance a ?subClass .
    }
    FILTER (!isBlank(?class))
}
GROUP BY ?class

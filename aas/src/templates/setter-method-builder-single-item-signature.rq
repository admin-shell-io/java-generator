#
# Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:setter-method-builder-single-item-signature(?property, ?class, ?range) {

    "\n"
    "\n\t/**"
    "\n\t* This function allows adding a value to the List "
    st:call-template(idstt:to_java_field_name, ?property, ?class)
    "\n\t* @param "
    st:call-template(idstt:to_java_property_name, ?property)
    " desired value to be added"
    "\n\t* @return Builder object with new value for "
    st:call-template(idstt:to_java_field_name, ?property, ?class)
    "\n\t*/"
	"\n\t"

    "public "

    if(?hasExtendable,
        "B ",
        concat(st:call-template(idstt:to_builder_name, ?class), " ")
    )
    st:call-template(idstt:to_java_property_name, ?property) "(" IRI(?range) " " st:call-template(idstt:to_java_property_name, ?property) ")"
}
where {
    BIND( st:has-extendable-builder() as ?hasExtendable )
}

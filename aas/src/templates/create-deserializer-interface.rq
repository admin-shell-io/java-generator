prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:create-deserializer-interface {

    st:call-template(idstt:get-package, 'serialization')
    st:call-template(idstt:basic-imports)


    "\npublic interface Deserializer {\n"
    "\n\t"
    "public static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;"
    "\n\n\t"
    "public AssetAdministrationShellEnvironment read(String value) throws DeserializationException;"
    "\n\n\t"
    "public default AssetAdministrationShellEnvironment read(InputStream src) throws DeserializationException {"
    "\n\t\treturn read(src, DEFAULT_CHARSET);"
    "\n\t}"

    "\n\n\t"
    "public default AssetAdministrationShellEnvironment read(InputStream src, Charset charset) throws DeserializationException {"
    "\n\t\treturn read(new BufferedReader("
    "\n\t\t\tnew InputStreamReader(src, charset))"
    "\n\t\t\t.lines()"
    "\n\t\t\t.collect(Collectors.joining(System.lineSeparator())));"
    "\n\t}"

    "\n\n\t//Note that the AAS also defines a file class"
    "\n\n\t"
    "public default AssetAdministrationShellEnvironment read(java.io.File file, Charset charset) throws FileNotFoundException, DeserializationException {"
    "\n\t\treturn read(new FileInputStream(file), charset);"
    "\n\t}"

    "\n\n\t"
    "public default AssetAdministrationShellEnvironment read(java.io.File file) throws FileNotFoundException, DeserializationException {"
    "\n\t\treturn read(file, DEFAULT_CHARSET);"
    "\n\t}"

    "\n\n\t"
    "public <T> void useImplementation(Class<T> aasInterface, Class<? extends T> implementation);"

    "\n\n}"
}
WHERE {
}
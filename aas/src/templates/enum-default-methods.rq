prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:enum-default-methods(?class) {

    "\n"
	"\n\t@JsonIgnore"
    "\n\tfinal public URI getId() {"
    "\n\t\treturn id;"
    "\n\t}"
	"\n"

	"\n\t@JsonIgnore"
    "\n\tfinal public List<TypedLiteral> getLabel() {"
    "\n\t\treturn label;"
    "\n\t}"
	"\n"

	"\n\t@JsonIgnore"
    "\n\tfinal public List<TypedLiteral> getComment() {"
    "\n\t\treturn comment;"
    "\n\t}"
	"\n"

    "\n"
    "\n\t@JsonProperty(\"@id\")"
    "\n\tfinal public URI getSerializedId() {"
    # TODO: Use Namespaces if possible (do not hard-code IDSC!)
    "\n\t\treturn id;"
    "\n\t}"
    "\n\t"

    # @ REMOVE ??
    # "\n"
    # "\n\t@JsonCreator"
    # "\n\tpublic static " st:call-template(idstt:to_enum_name, ?class) " deserialize(JsonNode node) {"
    # "\n\t\treturn uriInstanceMapping.get(node.has(\"@id\") ? node.get(\"@id\").textValue() : node.textValue());"
    # "\n\t}"

    "\n"
	"\n\t@Override"
	"\n\tpublic String toString() {"
		"\n\t\treturn id.toString();"
	"\n\t}"

}
where {}
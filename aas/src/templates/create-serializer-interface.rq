#
# Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:create-serializer-interface {

    st:call-template(idstt:get-package, 'serialization')
    st:call-template(idstt:basic-imports)

    "\n/**"
      "\n* Generic serializer interface to serialize an instance of"
      " AssetAdministrationShellEnvironment to a string, Outputstream or java.io.File"
      "*/"
    "\npublic interface Serializer {\n"
    "\n\t"
    "/**"
          "\n* Default charset that will be used when no charset is specified"
          "*/\n"
    "Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;"
    "\n\n\t"

    "/**"
          "\n* Serializes a given instance of AssetAdministrationShellEnvironment to"
          " string"
          "\n* @param aasEnvironment the AssetAdministrationShellEnvironment to"
          " serialize"
          "\n* @return the string representation of the environment"
          "\n* @throws SerializationException if serialization fails"
          "*/\n"
    "String write(AssetAdministrationShellEnvironment aasEnvironment) throws SerializationException;"
    "\n\n\t"


    "/**"
          "\n* Serializes a given instance of AssetAdministrationShellEnvironment to an"
          " OutputStream using DEFAULT_CHARSET"
          "\n* @param out the Outputstream to serialize to"
          "\n* @param aasEnvironment the AssetAdministrationShellEnvironment to"
          " serialize"
          "\n* @throws IOException if writing to the stream fails"
          "\n* @throws SerializationException if serialization fails"
          "*/"
    "default void write(OutputStream out, AssetAdministrationShellEnvironment aasEnvironment) throws IOException, SerializationException {"
    "\n\t\twrite(out, DEFAULT_CHARSET, aasEnvironment);"
    "\n\t}"

    "\n\n\t"

    "/**"
          "\n* Serializes a given instance of AssetAdministrationShellEnvironment to an"
          " OutputStream using given charset"
          "\n* @param out the Outputstream to serialize to"
          "\n* @param charset the Charset to use for serialization"
          "\n* @param aasEnvironment the AssetAdministrationShellEnvironment to"
          " serialize"
          "\n* @throws IOException if writing to the stream fails"
          "\n* @throws SerializationException if serialization fails"
          "*/"
    "default void write(OutputStream out, Charset charset, AssetAdministrationShellEnvironment aasEnvironment) throws IOException, SerializationException {"
    "\n\t\ttry (OutputStreamWriter writer = new OutputStreamWriter(out, charset)) {"
    "\n\t\t\twriter.write(write(aasEnvironment));"
    "\n\t\t}"
    "\n\t}"

    "\n\n\t//Note that the AAS also defines a file class"
    "\n\n\t"
    "/**"
          "\n* Serializes a given instance of AssetAdministrationShellEnvironment to a"
          " java.io.File using DEFAULT_CHARSET"
          "\n* @param file the java.io.File to serialize to"
          "\n* @param charset the Charset to use for serialization"
          "\n* @param aasEnvironment the AssetAdministrationShellEnvironment to"
          " serialize"
          "\n* @throws FileNotFoundException if the fail does not exist"
          "\n* @throws IOException if writing to the file fails"
          "\n* @throws SerializationException if serialization fails"
          "*/"
    "default void write(java.io.File file, Charset charset, AssetAdministrationShellEnvironment aasEnvironment) throws FileNotFoundException, IOException, SerializationException {"
    "\n\t\ttry (OutputStream out = new FileOutputStream(file)) {"
    "\n\t\t\twrite(out, charset, aasEnvironment);"
    "\n\t\t}"
    "\n\t}"

    "\n\n\t"

    "/**"
          "\n* Serializes a given instance of AssetAdministrationShellEnvironment to a"
          " java.io.File using given charset"
          "\n* @param file the java.io.File to serialize to"
          "\n* @param aasEnvironment the AssetAdministrationShellEnvironment to"
          " serialize"
          "\n* @throws FileNotFoundException if the fail does not exist"
          "\n* @throws IOException if writing to the file fails"
          "\n* @throws SerializationException if serialization fails"
          "*/"
    "default void write(java.io.File file, AssetAdministrationShellEnvironment aasEnvironment) throws FileNotFoundException, IOException, SerializationException {"
    "\n\t\twrite(file, DEFAULT_CHARSET, aasEnvironment);"
    "\n\t}"

    "\n\n}"
}
WHERE {
    BIND( st:has-id-label-comment() as ?hasId )
}

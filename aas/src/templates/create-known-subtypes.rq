#
# Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

prefix idstt: <https://w3id.org/idsa/transformationtemplates/>

template idstt:create-known-subtypes {

    st:call-template(idstt:get-license)
    st:call-template(idstt:get-package, 'annotations')

    "\nimport java.lang.annotation.Retention;"
    "\nimport java.lang.annotation.RetentionPolicy;\n"

    "\n//Retention policy runtime required for reflective access"
    "\n@Retention(RetentionPolicy.RUNTIME)"
    "\npublic @interface KnownSubtypes {"
        "\n/**"
        "\n* This element stores the known sub-types, e.g. implementing classes of an interface, or extending classes of a class."
        "\n* Note that this list can never be expected to be complete, as custom implementations will not be included."
        "\n* @return List of known implementing subtypes"
        "\n*/"
        "\npublic KnownSubtypes.Type[] value();"
        "\n"
        "\npublic @interface Type {"
            "\nClass<?> value();"
            "\n"
            "\nString name() default \"\";"
        "\n}"
    "\n\n}"

}
where{}
